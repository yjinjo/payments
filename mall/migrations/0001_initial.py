# Generated by Django 4.1.7 on 2023-04-22 05:02

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Category",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, unique=True)),
            ],
            options={
                "verbose_name": "상품 분류",
                "verbose_name_plural": "상품 분류",
            },
        ),
        migrations.CreateModel(
            name="Order",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("uid", models.UUIDField(default=uuid.uuid4, editable=False)),
                ("total_amount", models.PositiveIntegerField(verbose_name="결제금액")),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("requested", "주문요청"),
                            ("failed_payment", "결제실패"),
                            ("paid", "결제완료"),
                            ("prepared_product", "상품준비중"),
                            ("shipped", "배송중"),
                            ("delivered", "배송완료"),
                            ("canceled", "주문취소"),
                        ],
                        db_index=True,
                        default="requested",
                        max_length=20,
                        verbose_name="진행상태",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name="Product",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(db_index=True, max_length=100)),
                ("description", models.TextField(blank=True)),
                ("price", models.PositiveIntegerField()),
                (
                    "status",
                    models.CharField(
                        choices=[("a", "정상"), ("s", "품절"), ("o", "단종"), ("i", "비활성화")],
                        default="i",
                        max_length=1,
                    ),
                ),
                ("photo", models.ImageField(upload_to="mall/product/photo/%Y/%m/%d")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "category",
                    models.ForeignKey(
                        db_constraint=False,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="mall.category",
                    ),
                ),
            ],
            options={
                "verbose_name": "상품",
                "verbose_name_plural": "상품",
                "ordering": ["-pk"],
            },
        ),
        migrations.CreateModel(
            name="OrderPayment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "meta",
                    models.JSONField(
                        default=dict, editable=False, verbose_name="포트원 결제내역"
                    ),
                ),
                (
                    "uid",
                    models.UUIDField(
                        default=uuid.uuid4, editable=False, verbose_name="쇼핑몰 결제식별자"
                    ),
                ),
                ("name", models.CharField(max_length=200, verbose_name="결제명")),
                (
                    "desired_amount",
                    models.PositiveIntegerField(editable=False, verbose_name="결제금액"),
                ),
                (
                    "buyer_name",
                    models.CharField(
                        editable=False, max_length=100, verbose_name="구매자 이름"
                    ),
                ),
                (
                    "buyer_email",
                    models.EmailField(
                        editable=False, max_length=254, verbose_name="구매자 이메일"
                    ),
                ),
                (
                    "pay_method",
                    models.CharField(
                        choices=[("card", "신용카드")],
                        default="card",
                        max_length=20,
                        verbose_name="결제수단",
                    ),
                ),
                (
                    "pay_status",
                    models.CharField(
                        choices=[
                            ("ready", "결제 준비"),
                            ("paid", "결제 완료"),
                            ("canceled", "결제 취소"),
                            ("failed", "결제 실패"),
                        ],
                        default="ready",
                        max_length=20,
                        verbose_name="결제상태",
                    ),
                ),
                (
                    "is_paid_ok",
                    models.BooleanField(
                        db_index=True,
                        default=False,
                        editable=False,
                        verbose_name="결제성공 여부",
                    ),
                ),
                (
                    "order",
                    models.ForeignKey(
                        db_constraint=False,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="mall.order",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="OrderedProduct",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="주문 시점의 상품명을 저장합니다.",
                        max_length=100,
                        verbose_name="상품명",
                    ),
                ),
                (
                    "price",
                    models.PositiveIntegerField(
                        help_text="주문 시점의 상품가격을 저장합니다.", verbose_name="상품가격"
                    ),
                ),
                ("quantity", models.PositiveIntegerField(verbose_name="수량")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "order",
                    models.ForeignKey(
                        db_constraint=False,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="mall.order",
                    ),
                ),
                (
                    "product",
                    models.ForeignKey(
                        db_constraint=False,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="mall.product",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="order",
            name="product_set",
            field=models.ManyToManyField(
                through="mall.OrderedProduct", to="mall.product"
            ),
        ),
        migrations.AddField(
            model_name="order",
            name="user",
            field=models.ForeignKey(
                db_constraint=False,
                on_delete=django.db.models.deletion.CASCADE,
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.CreateModel(
            name="CartProduct",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "quantity",
                    models.PositiveIntegerField(
                        default=1,
                        validators=[django.core.validators.MinValueValidator(1)],
                    ),
                ),
                (
                    "product",
                    models.ForeignKey(
                        db_constraint=False,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="mall.product",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        db_constraint=False,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="cart_product_set",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "장바구니 상품",
                "verbose_name_plural": "장바구니 상품",
            },
        ),
        migrations.AddConstraint(
            model_name="cartproduct",
            constraint=models.UniqueConstraint(
                fields=("user", "product"), name="unique_user_product"
            ),
        ),
    ]
